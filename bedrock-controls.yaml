AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS Bedrock Security Controls - IAM, Monitoring, Alerting, and Cost Management'

Parameters:
  AdminEmail:
    Type: String
    Description: Email address for notifications and alerts
    ConstraintDescription: Must be a valid email address
  
  MonthlyBudgetAmount:
    Type: Number
    Description: Monthly budget limit for Bedrock in USD
    Default: 100
    MinValue: 1
    ConstraintDescription: Must be a positive number
    
  EnvironmentName:
    Type: String
    Description: Environment name (dev, test, prod, etc.)
    Default: dev
    AllowedPattern: "[a-zA-Z0-9]+"
    ConstraintDescription: Environment name must contain only alphanumeric characters

  NetworkStackName:
    Type: String
    Description: Name of the network infrastructure stack
    ConstraintDescription: Must be the name of an existing CloudFormation stack

Resources:
  BedrockAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 'bedrock-access-role-${EnvironmentName}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - !Ref BedrockRestrictedPolicy
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName

  BedrockRestrictedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: !Sub 'bedrock-restricted-policy-${EnvironmentName}'
      Description: Restricted policy for AWS Bedrock access with least privilege principles
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - bedrock:InvokeModel
              - bedrock:InvokeModelWithResponseStream
            Resource:
              - !Sub 'arn:aws:bedrock:${AWS::Region}::foundation-model/anthropic.claude-3-sonnet-20240229-v1:0'
              - !Sub 'arn:aws:bedrock:${AWS::Region}::foundation-model/amazon.titan-text-express-v1'
            Condition:
              StringEquals:
                'aws:RequestTag/Environment': !Ref EnvironmentName
          - Effect: Allow
            Action:
              - bedrock:GetFoundationModel
            Resource: '*'

  BedrockLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/bedrock/model-invocations-${EnvironmentName}'
      RetentionInDays: 30
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName

  BedrockAlertsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub 'bedrock-alerts-${EnvironmentName}'
      Subscription:
        - Protocol: email
          Endpoint: !Ref AdminEmail
      Tags:
        - Key: Environment
          Value: !Ref EnvironmentName

  BedrockBudget:
    Type: AWS::Budgets::Budget
    Properties:
      Budget:
        BudgetName: !Sub 'bedrock-monthly-budget-${EnvironmentName}'
        BudgetType: COST
        TimeUnit: MONTHLY
        BudgetLimit:
          Amount: !Ref MonthlyBudgetAmount
          Unit: USD
        CostFilters:
          Service:
            - Amazon Bedrock
      NotificationsWithSubscribers:
        - Notification:
            NotificationType: ACTUAL
            ComparisonOperator: GREATER_THAN
            Threshold: 80
            ThresholdType: PERCENTAGE
          Subscribers:
            - SubscriptionType: EMAIL
              Address: !Ref AdminEmail

Outputs:
  BedrockAccessRoleARN:
    Description: ARN of the Bedrock access role with least privilege permissions
    Value: !GetAtt BedrockAccessRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-BedrockAccessRoleARN'

  BedrockAlertsTopicARN:
    Description: ARN of the Bedrock alerts SNS topic for monitoring notifications
    Value: !Ref BedrockAlertsTopic
    Export:
      Name: !Sub '${AWS::StackName}-BedrockAlertsTopicARN' 